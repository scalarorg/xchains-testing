import { z } from "zod";

const ProjectENVSchema = z.object({
  NETWORK: z.string().default("testnet"),
  PROTOCOL_PUBLIC_KEY: z.string(),
  PROTOCOL_PRIVATE_KEY: z.string(),
  COVENANT_PUBLIC_KEYS: z.string(),
  BITCOIN_NODE_ADDRESS: z.string(),
  BITCOIN_NODE_PORT: z.string(),
  BITCOIN_WALLET: z.string(),
  BITCOIN_USER: z.string(),
  BITCOIN_PASSWORD: z.string(),
  SSL_ENABLED: z.string(),
  MEMPOOL_WEB: z.string(),
  API_URL: z.string(),
  COVENANT_QUORUM: z.string(),
  BURN_CONTRACT_ADDRESS: z.string(),
  BURN_DESTINATION_CHAIN: z.string(),
  BURN_DESTINATION_ADDRESS: z.string(),
  SBTC_CONTRACT_ADDRESS: z.string(),
  ETH_RPC_URL: z.string(),
  BTC_FUNDING_AMOUNT: z.string(),
  ETH_FUNDING_AMOUNT: z.string(),
  ACCOUNT_FILE_NAME: z.string(),
  TAG: z.string(),
  VERSION: z.string(),
  DEST_CHAIN_ID: z.string(),
  MINT_ADDRESS: z.string(),
  STAKING_AMOUNT: z.string(),
  MINTING_AMOUNT: z.string(),
  NUMBER_OF_ACCOUNTS: z.string(),
  GENERATE_ACCOUNTS_TYPE: z.string(),
  FUNDING_BTC_PUBLIC_KEY: z.string(),
  FUNDING_BTC_ADDRESS: z.string(),
  FUNDING_BTC_PRIVATE_KEY_HEX: z.string(),
  FUNDING_BTC_PRIVATE_KEY_WIF: z.string(),
  FUNDING_ETH_ADDRESS: z.string(),
  FUNDING_ETH_PRIVATE_KEY: z.string(),
});

/**
 * Return system ENV with parsed values
 */
export const ProjectENV = ProjectENVSchema.parse({
  NETWORK: process.env.NETWORK,
  PROTOCOL_PUBLIC_KEY: process.env.PROTOCOL_PUBLIC_KEY,
  PROTOCOL_PRIVATE_KEY: process.env.PROTOCOL_PRIVATE_KEY,
  COVENANT_PUBLIC_KEYS: process.env.COVENANT_PUBLIC_KEYS,
  BITCOIN_NODE_ADDRESS: process.env.BITCOIN_NODE_ADDRESS,
  BITCOIN_NODE_PORT: process.env.BITCOIN_NODE_PORT,
  BITCOIN_WALLET: process.env.BITCOIN_WALLET,
  BITCOIN_USER: process.env.BITCOIN_USER,
  BITCOIN_PASSWORD: process.env.BITCOIN_PASSWORD,
  SSL_ENABLED: process.env.SSL_ENABLED,
  MEMPOOL_WEB: process.env.MEMPOOL_WEB,
  API_URL: process.env.API_URL,
  COVENANT_QUORUM: process.env.COVENANT_QUORUM,
  BURN_CONTRACT_ADDRESS: process.env.BURN_CONTRACT_ADDRESS,
  BURN_DESTINATION_CHAIN: process.env.BURN_DESTINATION_CHAIN,
  BURN_DESTINATION_ADDRESS: process.env.BURN_DESTINATION_ADDRESS,
  SBTC_CONTRACT_ADDRESS: process.env.SBTC_CONTRACT_ADDRESS,
  ETH_RPC_URL: process.env.ETH_RPC_URL,
  BTC_FUNDING_AMOUNT: process.env.BTC_FUNDING_AMOUNT,
  ETH_FUNDING_AMOUNT: process.env.ETH_FUNDING_AMOUNT,
  ACCOUNT_FILE_NAME: process.env.ACCOUNT_FILE_NAME,
  TAG: process.env.TAG,
  VERSION: process.env.VERSION,
  DEST_CHAIN_ID: process.env.DEST_CHAIN_ID,
  MINT_ADDRESS: process.env.MINT_ADDRESS,
  STAKING_AMOUNT: process.env.STAKING_AMOUNT,
  MINTING_AMOUNT: process.env.MINTING_AMOUNT,
  NUMBER_OF_ACCOUNTS: process.env.NUMBER_OF_ACCOUNTS,
  GENERATE_ACCOUNTS_TYPE: process.env.GENERATE_ACCOUNTS_TYPE,
  FUNDING_BTC_PUBLIC_KEY: process.env.FUNDING_BTC_PUBLIC_KEY,
  FUNDING_BTC_ADDRESS: process.env.FUNDING_BTC_ADDRESS,
  FUNDING_BTC_PRIVATE_KEY_HEX: process.env.FUNDING_BTC_PRIVATE_KEY_HEX,
  FUNDING_BTC_PRIVATE_KEY_WIF: process.env.FUNDING_BTC_PRIVATE_KEY_WIF,
  FUNDING_ETH_ADDRESS: process.env.FUNDING_ETH_ADDRESS,
  FUNDING_ETH_PRIVATE_KEY: process.env.FUNDING_ETH_PRIVATE_KEY,
});
